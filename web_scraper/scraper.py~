import requests
from bs4 import BeautifulSoup
import csv

def fetch_html(url):
    """
    Fetches the HTML content from the provided URL.
    """
    response = requests.get(url)
    # Check if the request was successful (status code 200)
    if response.status_code != 200:
        print(f"Failed to retrieve data from {url}")
        return None
    return response.content

def parse_repositories(html):
    """
    Parses the HTML content to extract repository names and visibility 
    (Public or Private) from the GitHub user profile page.
    """
    soup = BeautifulSoup(html, 'html.parser')
    
    # Find all the <div> elements that represent individual repositories
    repo_elements = soup.find_all('div', class_='d-flex flex-column flex-md-row mb-4')

    repo_data = []
    
    for repo in repo_elements:
        # Extract the name of the repository from <span class="repo">
        name = repo.find('span', class_='repo')
        
        # Extract the visibility (Public or Private)
        visibility = 'Public'  # Default is public
        private_tag = repo.find('span', class_='Label Label--secondary')
        if private_tag and 'private' in private_tag.text.lower():
            visibility = 'Private'
        
        if name:
            repo_data.append((name.text.strip(), visibility))  # Append both name and visibility
    
    return repo_data

def save_to_csv(data, filename="repositories.csv"):
    """
    Saves the list of repository names and visibility to a CSV file.
    """
    if data:
        with open(filename, mode='w', newline='', encoding='utf-8') as file:
            file.write("Repository Name,Visibility\n")  # Write header
            for repo in data:
                file.write(f"{repo[0]},{repo[1]}\n")  # Write name and visibility on a new line
        print(f"Data saved to {filename}")
    else:
        print("No data to save.")

